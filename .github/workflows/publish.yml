# Workflow for rendering and deploying quarto site to GitHub Pages
# Based on the GitHub example static content deploy action
name: ðŸš€ Deploy Quarto site to Pages

on:
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  push:
    branches: ["doc-ju"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
    
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  # Single deploy job since we're just deploying
  build-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-20.04
    steps:
      - name: ðŸ“‚ Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ðŸšš Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      
      - name: Install GDAL, UDUNITS2
        run: sudo apt update; sudo apt install libgdal-dev libudunits2-dev
        
      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.0'
          
      - name: Install R Dependencies
        uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 1

      - name: ðŸŽ‰ Deploy to GitHub Pages
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

